

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace CGSolar
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class GuptaAgroDBContext : DbContext
{
    public GuptaAgroDBContext()
        : base("name=GuptaAgroDBContext")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<tbl_beneficiary> tbl_beneficiary { get; set; }

    public virtual DbSet<tbl_employee> tbl_employee { get; set; }

    public virtual DbSet<tbl_InventoryStock> tbl_InventoryStock { get; set; }

    public virtual DbSet<tbl_OandM> tbl_OandM { get; set; }


    public virtual ObjectResult<Nullable<int>> usp_complaint(string workorder, Nullable<int> beneficiaryId, string assignedTo, string aadhar, Nullable<System.DateTime> reportedon, string problemtype)
    {

        var workorderParameter = workorder != null ?
            new ObjectParameter("workorder", workorder) :
            new ObjectParameter("workorder", typeof(string));


        var beneficiaryIdParameter = beneficiaryId.HasValue ?
            new ObjectParameter("beneficiaryId", beneficiaryId) :
            new ObjectParameter("beneficiaryId", typeof(int));


        var assignedToParameter = assignedTo != null ?
            new ObjectParameter("assignedTo", assignedTo) :
            new ObjectParameter("assignedTo", typeof(string));


        var aadharParameter = aadhar != null ?
            new ObjectParameter("aadhar", aadhar) :
            new ObjectParameter("aadhar", typeof(string));


        var reportedonParameter = reportedon.HasValue ?
            new ObjectParameter("reportedon", reportedon) :
            new ObjectParameter("reportedon", typeof(System.DateTime));


        var problemtypeParameter = problemtype != null ?
            new ObjectParameter("problemtype", problemtype) :
            new ObjectParameter("problemtype", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_complaint", workorderParameter, beneficiaryIdParameter, assignedToParameter, aadharParameter, reportedonParameter, problemtypeParameter);
    }

}

}

